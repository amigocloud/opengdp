#!/bin/bash
# Copyright (c) 2011, Brian Case
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.


###############################################################################
## @brief function to create a js with the layers for openlayers and a geoext folder
##
## @return 0 for success
##
## @details
## global vars
## @param attribution     html attribution to add to the map
## @param urlcgibin       url for the projects mapserver cgibin
## @param dsname          name of the dataset
## @param htmlbase        path to the local html files for the project
## 
###############################################################################

dogeoext () {
    #FIXME use locals
    if [ -n attribution ]
    then
        attrib=",
      attribution: '${attribution}'"
    else
        attrib=""
    fi

(
    cat << EOF

Ext.onReady(function() {

  var ${dsname}_layers = [];

EOF

    ##### loop over the layers in the index #####
    
    IFS="|"
    while read lid junk ts lname extent gextent
    do
        unset IFS
        read gw gs ge gn <<<"$gextent"
        IFS="|"
        cat << EOF
    
  ${lname} = new OpenLayers.Layer.WMS(
    "${lname}",
    "$urlcgibin",
    {
      layers: '${lname}',
      format: 'image/png',
      transparency: 'TRUE'
    },
    {
      isBaseLayer: false,
      visibility: false,
      perm: false,
      myExtent: new OpenLayers.Bounds(${gw}, ${gs}, ${ge}, ${gn}),
      lid: '${project}${lid}'${attrib}
    }
  );

  ${dsname}_layers.push( ${lname} );

EOF

    done < <(index_get_layers)

    cat << EOF
    
  //map.addLayers(${dsname}_layers);
  
  ${dsname}_store = new GeoExt.data.LayerStore(
    {
      initDir: 0,
      layers: ${dsname}_layers
    }
  );

  ${dsname}_list = new GeoExt.tree.OverlayLayerContainer(
    {
      text: '${dsname}',
      layerStore: ${dsname}_store,
      leaf: false,
      nodeType: "gx_overlaylayercontainer",
      expanded: true,
      applyLoader: false
    }
  );

  layerRoot.appendChild(${dsname}_list);

});

EOF


) > ${htmlbase}/${dsname}.js

    ##### make sure the js is loaded by index.html
    
    if ! grep "${htmlbase}/index.html" -e "${dsname}.js" > /dev/null && \
       ! grep "${htmlbase}/index.html" -e "${dsname}_tc.js" > /dev/null       
    then
        if grep "${htmlbase}/index.html" -e "osm.js" > /dev/null
        then
        
            local linenum=$(cat "${htmlbase}/index.html" |\
                             grep -n -e "osm.js" |\
                             tail -n 1 |\
                             cut -d ":" -f 1
                           )
        else

            local linenum=$(cat "${htmlbase}/index.html" |\
                             grep -n -e "finish.js" |\
                             tail -n 1 |\
                             cut -d ":" -f 1
                           )
        fi
        
        ed -s "${htmlbase}/index.html" << EOF
${linenum}-1a
        <script type="text/javascript" src="${dsname}.js"></script>
.
w
EOF
    fi


}

###############################################################################
## @brief function to create a js with the layers for openlayers and a geoext
## folder for tilecache
##
## @return 0 for success
##
## @details
## global vars
## @param attribution     html attribution to add to the map
## @param urlcgibin_tc    url for the projects tilecache cgibin
## @param dsname          name of the dataset
## @param htmlbase        path to the local html files for the project
##   
###############################################################################

dogeoext_tc () {
    #FIXME use locals
    if [ -n attribution ]
    then
        attrib=",
      attribution: '${attribution}'"
    else
        attrib=""
    fi

(
    cat << EOF

Ext.onReady(function() {

  var ${dsname}_layers_tc = [];

EOF

    ##### loop over the layers in the index #####
    
    IFS="|"
    while read lid junk ts lname extent gextent
    do
        unset IFS
        read gw gs ge gn <<<"$gextent"
        IFS="|"
        cat << EOF
    
  ${lname}_tc = new OpenLayers.Layer.WMS(
    "${project}_${lname}",
    "$urlcgibin_tc",
    {
      layers: '${project}_${lname}',
      format: 'image/png',
      transparency: 'TRUE'
    },
    {
      isBaseLayer: false,
      visibility: false,
      perm: false,
      myExtent: new OpenLayers.Bounds(${gw}, ${gs}, ${ge}, ${gn}),
      lid: '${project}${lid}'${attrib}
    }
  );

  ${dsname}_layers_tc.push( ${lname}_tc );

EOF

    done < <(index_get_layers)

    cat << EOF
    
  //map.addLayers(${dsname}_layers);
  
  ${dsname}_store_tc = new GeoExt.data.LayerStore(
    {
      initDir: 0,
      layers: ${dsname}_layers_tc
    }
  );

  ${dsname}_list_tc = new GeoExt.tree.OverlayLayerContainer(
    {
      text: '${dsname}',
      layerStore: ${dsname}_store_tc,
      leaf: false,
      nodeType: "gx_overlaylayercontainer",
      expanded: true,
      applyLoader: false
    }
  );

  layerRoot.appendChild(${dsname}_list_tc);

});

EOF


) > "${htmlbase}/${dsname}_tc.js"

 #    ##### make sure the js is loaded by index.html
 #    
 #    if ! grep "${htmlbase}/index.html" -e "${dsname}_tc.js" > /dev/null
 #    then
 #        linenum=$(cat "${htmlbase}/index.html" |\
 #                   grep -n -e "finish.js" |\
 #                   tail -n 1 |\
 #                   cut -d ":" -f 1
 #                 )
 #
 #        ed -s "${htmlbase}/index.html" << EOF
 #${linenum}-1a
 #        <script type="text/javascript" src="${dsname}_tc.js"></script>
 #.
 #w
 #EOF
 #    fi

}
