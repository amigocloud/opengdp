#!/bin/bash
# Copyright (c) 2011, Brian Case
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.



have_addo() {
    local file="$1"

    local have=0

    have=$( tiffinfo "${file}" 2> /dev/null |\
             grep -e "Subfile Type: reduced-resolution image (1 = 0x1)" |\
             wc -l )

    local x
    local y
    local o
    local count
    read x y < <( gdalinfo "${file}" |\
                           grep -e "Size is" |\
                           sed 's/Size is \([0-9]*\), \([0-9]*\)/\1 \2/')

    ((o=2))
    ((count=0))

    while fcmp "64 < $x / $o" && fcmp "64 < $y / $o"
    do
        ((count++))
        ((o*=2))
    done

    if ((have < count))
    then
        return 1
    fi

}


###############################################################################
## @brief function to add internal overviews to a file down to  64x64
## 
## @param file the path/file to add overviews to
##
## @details
## global vars
## @param resample_alg  var that contains the gdal resample algorithm option
##
###############################################################################

addo () {
    local file="$1"
    local x
    local y
    local o
    local ovrs
    
    read x y < <( gdalinfo "${file}" |\
                           grep -e "Size is" |\
                           sed 's/Size is \([0-9]*\), \([0-9]*\)/\1 \2/')
    
    ##### add overviews #####
    
    ((o=2))
    ovrs=""
    while fcmp "64 < $x / $o" && fcmp "64 < $y / $o"
    do
        ovrs="$ovrs $o"
        ((o*=2))
    done
    
    gdaladdo -clean -r ${resample_alg} "$file" $ovrs > /dev/null
    
}
###############################################################################
## @brief function to add internal overviews to a file down to  64x64
##
## @param file the path/file to add overviews to
##
## @details
## global vars
## @param resample_alg  the gdal resample algorithm option
##
## note this function echoes to fd 3 and is used when doing -readdo
## multi proccesseing
##
###############################################################################

readdo2 () {
    local file="$1"
    local x
    local y
    local o
    local ovrs

    read x y < <( gdalinfo "${file}" |\
                           grep -e "Size is" |\
                           sed 's/Size is \([0-9]*\), \([0-9]*\)/\1 \2/')
    
    ##### add overviews #####
    
    ((o=2))
    ovrs=""
    while fcmp "64 < $x / $o" && fcmp "64 < $y / $o"
    do
        ovrs="$ovrs $o"
        ((o*=2))
    done
    
    gdaladdo -clean -r ${resample_alg} "$file" $ovrs > /dev/null
    
    echo >&3
}

###############################################################################
## @brief function to rebuild internal overviews -readdo
##
## @details
## global vars 
## @param tmp     the temp dir
## @param outdir  the image output dir
##
## note this function calls mainloop which spawns limit number of readdo2
## proccesses
##
###############################################################################

readdo () {
    
    local tmpdir=$(mktemp -d -p "$tmp" "${dsname}XXXXXXXXXX")
            
    find "${outdir}" -name "*.tif" > "${tmpdir}/tiflist.txt"
 
    mainloop "${tmpdir}/tiflist.txt" readdo2
    
    rm -rf "${tmpdir}"
    
}



